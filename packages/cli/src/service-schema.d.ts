/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
  "/health": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Health check */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Service is healthy. */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Homepage */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Root endpoint */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            /** @example <!DOCTYPE html> */
            "text/html": unknown;
            "application/json": {
              urls: {
                [key: string]: {
                  [key: string]: string;
                };
              };
            };
          };
        };
        /** @description Redirects to all projects */
        303: {
          headers: {
            /** @description The URL to redirect to */
            Location?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/openapi": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** OpenAPI spec */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            /** @example {
             *       "info": {
             *         "title": "StoryBooker"
             *       },
             *       "openapi": "3.1.0"
             *     } */
            "application/json": unknown;
            /** @example <!DOCTYPE html> */
            "text/html": string;
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/{projectId}/{buildSHA}/{filepath}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Serve StoryBook */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          buildSHA: string;
          filepath: string;
          projectId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** Serving the uploaded file */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/create": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Form to create project */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Form to create project */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            /** @example <!DOCTYPE html> */
            "text/html": unknown;
          };
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    put?: never;
    /** Create a new project */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      /** @description Data about the project */
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            /**
             * @description Default branch to use for GitHub repository
             * @default main
             */
            gitHubDefaultBranch?: string;
            /** @description Path to the storybook project with respect to repository root. */
            gitHubPath?: string;
            gitHubRepository: string;
            id: components["schemas"]["projectId"];
            /** Format: uri */
            jiraDomain?: string;
            /** @description Name of the project. */
            name: string;
            /**
             * @description Days after which the builds in the project should be purged.
             * @default 30
             */
            purgeBuildsAfterDays?: number;
          };
        };
      };
      responses: {
        /** @description Project created successfully */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              project: components["schemas"]["project"];
            };
          };
        };
        /** @description Project created, redirecting... */
        303: {
          headers: {
            /** Format: url */
            Location?: unknown;
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Project already exists. */
        409: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unsupported Media Type */
        415: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{projectId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get project details */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description The ID of the project. */
          projectId: components["schemas"]["projectId"];
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Project details retrieved successfully */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            /** @example <!DOCTYPE html> */
            "text/html": unknown;
            "application/json": {
              project: components["schemas"]["project"];
            };
          };
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Matching project not found. */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    /** Delete a project */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description The ID of the project. */
          projectId: components["schemas"]["projectId"];
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Project deleted successfully */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Matching project not found. */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** List all projects */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description A list of projects. */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            /** @example <!DOCTYPE html> */
            "text/html": unknown;
            "application/json": {
              projects: components["schemas"]["project"][];
            };
          };
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{projectId}/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Form to update project */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Form to update project */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            /** @example <!DOCTYPE html> */
            "text/html": unknown;
          };
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    put?: never;
    /** Update project details */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description The ID of the project. */
          projectId: components["schemas"]["projectId"];
        };
        cookie?: never;
      };
      /** @description Updated project data */
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Path to the storybook project with respect to repository root. */
            gitHubPath?: string;
            gitHubRepository?: string;
            /** Format: uri */
            jiraDomain?: string;
            latestBuildSHA?: components["schemas"]["buildSHA"] | "";
            /** @description Name of the project. */
            name?: string;
            /**
             * @description Days after which the builds in the project should be purged.
             * @default 30
             */
            purgeBuildsAfterDays?: number;
            gitHubDefaultBranch?: string;
          };
        };
      };
      responses: {
        /** @description Project updated successfully */
        202: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Project updated, redirecting... */
        303: {
          headers: {
            /** Format: url */
            Location?: unknown;
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Matching project not found. */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Unsupported Media Type */
        415: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{projectId}/labels/create": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Form to create label */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Form to create label */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            /** @example <!DOCTYPE html> */
            "text/html": unknown;
          };
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    put?: never;
    /** Create a new label */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description The ID of the project. */
          projectId: components["schemas"]["projectId"];
        };
        cookie?: never;
      };
      /** @description Data about the label */
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            latestBuildSHA?: components["schemas"]["buildSHA"] | "";
            /** @enum {string} */
            type: "branch" | "pr" | "jira";
            /** @description The value of the label. */
            value: string;
          };
        };
      };
      responses: {
        /** @description Label created successfully */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              label: components["schemas"]["label"];
            };
          };
        };
        /** @description Label created, redirecting... */
        303: {
          headers: {
            /** Format: url */
            Location?: unknown;
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Label already exists. */
        409: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unsupported Media Type */
        415: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{projectId}/labels/{labelSlug}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get label details */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description The slug of the label. */
          labelSlug: components["schemas"]["labelSlug"];
          /** @description The ID of the project. */
          projectId: components["schemas"]["projectId"];
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Label details retrieved successfully */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              label: components["schemas"]["label"];
            };
            /** @example <!DOCTYPE html> */
            "text/html": unknown;
          };
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    /** Delete label */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description The slug of the label. */
          labelSlug: components["schemas"]["labelSlug"];
          /** @description The ID of the project. */
          projectId: components["schemas"]["projectId"];
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Label deleted successfully */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Label deleted, redirecting... */
        303: {
          headers: {
            /** Format: url */
            Location?: unknown;
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Label not found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{projectId}/labels": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** List all labels for a project */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description The ID of the project. */
          projectId: components["schemas"]["projectId"];
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description A list of labels. */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            /** @example <!DOCTYPE html> */
            "text/html": unknown;
            "application/json": {
              labels: components["schemas"]["label"][];
            };
          };
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{projectId}/labels/{labelSlug}/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Form to update label */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Form to update label */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            /** @example <!DOCTYPE html> */
            "text/html": unknown;
          };
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    put?: never;
    /** Update label details */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description The slug of the label. */
          labelSlug: components["schemas"]["labelSlug"];
          /** @description The ID of the project. */
          projectId: components["schemas"]["projectId"];
        };
        cookie?: never;
      };
      /** @description Updated label data */
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            latestBuildSHA?: components["schemas"]["buildSHA"] | "";
            /** @enum {string} */
            type?: "branch" | "pr" | "jira";
            /** @description The value of the label. */
            value?: string;
          };
        };
      };
      responses: {
        /** @description Label updated successfully */
        202: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Label updated, redirecting... */
        303: {
          headers: {
            /** Format: url */
            Location?: unknown;
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Matching project or label not found. */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Unsupported Media Type */
        415: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{projectId}/builds/create": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Form to create build */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Form to create build */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            /** @example <!DOCTYPE html> */
            "text/html": unknown;
          };
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    put?: never;
    /** Create a new build */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description The ID of the project. */
          projectId: components["schemas"]["projectId"];
        };
        cookie?: never;
      };
      /** @description Data about the build */
      requestBody: {
        content: {
          "application/x-www-form-urlencoded": {
            /** @description Email of the author */
            authorEmail: string;
            authorName: string;
            message?: string;
            sha: components["schemas"]["buildSHA"];
            /** @description Label slugs associated with the build. Should be created beforehand. */
            labels: components["schemas"]["labelSlug"][];
          };
        };
      };
      responses: {
        /** @description Build created successfully */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              build: components["schemas"]["build"];
              /** Format: uri */
              url: string;
            };
          };
        };
        /** @description Build created, redirecting... */
        303: {
          headers: {
            /** Format: url */
            Location?: unknown;
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Build already exists. */
        409: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unsupported Media Type */
        415: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{projectId}/builds/{buildSHA}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get build details */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description The SHA of the build. */
          buildSHA: components["schemas"]["buildSHA"];
          /** @description The ID of the project. */
          projectId: components["schemas"]["projectId"];
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Build details retrieved successfully */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              build: components["schemas"]["build"];
              /** Format: uri */
              url: string;
            };
            /** @example <!DOCTYPE html> */
            "text/html": unknown;
          };
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    /** Delete build */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description The SHA of the build. */
          buildSHA: components["schemas"]["buildSHA"];
          /** @description The ID of the project. */
          projectId: components["schemas"]["projectId"];
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Build deleted successfully */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Build deleted, redirecting... */
        303: {
          headers: {
            /** Format: url */
            Location?: unknown;
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Build not found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{projectId}/builds": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** List all builds for a project */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description The ID of the project. */
          projectId: components["schemas"]["projectId"];
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description A list of builds. */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            /** @example <!DOCTYPE html> */
            "text/html": unknown;
            "application/json": {
              builds: components["schemas"]["build"][];
            };
          };
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{projectId}/builds/{buildSHA}/upload": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Form to upload build */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description The SHA of the build. */
          buildSHA: components["schemas"]["buildSHA"];
          /** @description The ID of the project. */
          projectId: components["schemas"]["projectId"];
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Form to upload build */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            /** @example <!DOCTYPE html> */
            "text/html": unknown;
          };
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    put?: never;
    /**
     * Upload build
     * @description Upload build files in a compressed zip
     */
    post: {
      parameters: {
        query?: {
          variant?: "storybook" | "testReport" | "coverage" | "screenshots";
        };
        header?: never;
        path: {
          /** @description The SHA of the build. */
          buildSHA: components["schemas"]["buildSHA"];
          /** @description The ID of the project. */
          projectId: components["schemas"]["projectId"];
        };
        cookie?: never;
      };
      /** @description Compressed zip containing files. */
      requestBody: {
        content: {
          "multipart/form-data": {
            /** Format: binary */
            file: string;
            /**
             * @default storybook
             * @enum {string}
             */
            variant?: "storybook" | "testReport" | "coverage" | "screenshots";
          };
          /** @example storybook.zip */
          "application/zip": string;
        };
      };
      responses: {
        /** @description File uploaded successfully */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description Invalid request data */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthenticated access */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unauthorized access */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
        /** @description Unsupported Media Type */
        415: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description An unexpected server-error occurred. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["error"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    /** @description The ID of the project. */
    projectId: string;
    /** @description The SHA of the build. */
    buildSHA: string;
    /** @description The slug of the label. */
    labelSlug: string;
    error: {
      errorMessage: string;
    };
    /** StoryBooker Project */
    project: {
      /**
       * Format: date-time
       * @default 2025-09-10T09:34:27.953Z
       */
      createdAt: string;
      /**
       * @description Default branch to use for GitHub repository
       * @default main
       */
      gitHubDefaultBranch: string;
      /** @description Path to the storybook project with respect to repository root. */
      gitHubPath?: string;
      gitHubRepository: string;
      id: components["schemas"]["projectId"];
      /** Format: uri */
      jiraDomain?: string;
      latestBuildSHA?: components["schemas"]["buildSHA"] | "";
      /** @description Name of the project. */
      name: string;
      /**
       * @description Days after which the builds in the project should be purged.
       * @default 30
       */
      purgeBuildsAfterDays: number;
      /**
       * Format: date-time
       * @default 2025-09-10T09:34:27.954Z
       */
      updatedAt: string;
    };
    /** StoryBooker Label */
    label: {
      /**
       * Format: date-time
       * @default 2025-09-10T09:34:27.953Z
       */
      createdAt: string;
      id: components["schemas"]["labelSlug"];
      latestBuildSHA?: components["schemas"]["buildSHA"] | "";
      slug: components["schemas"]["labelSlug"];
      /** @enum {string} */
      type: "branch" | "pr" | "jira";
      /**
       * Format: date-time
       * @default 2025-09-10T09:34:27.953Z
       */
      updatedAt: string;
      /** @description The value of the label. */
      value: string;
    };
    /** StoryBooker Build */
    build: {
      /** @description Email of the author */
      authorEmail: string;
      authorName: string;
      /**
       * Format: date-time
       * @default 2025-09-10T09:34:27.950Z
       */
      createdAt: string;
      hasCoverage?: boolean;
      hasScreenshots?: boolean;
      hasStorybook?: boolean;
      hasTestReport?: boolean;
      id: components["schemas"]["buildSHA"];
      labelSlugs: string;
      message?: string;
      sha: components["schemas"]["buildSHA"];
      /**
       * Format: date-time
       * @default 2025-09-10T09:34:27.952Z
       */
      updatedAt: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
